//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Client.CarReantalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarModel", Namespace="http://schemas.datacontract.org/2004/07/CarReantalWFCService.Models.Car")]
    [System.SerializableAttribute()]
    public partial class CarModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvaliableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Avaliable {
            get {
                return this.AvaliableField;
            }
            set {
                if ((this.AvaliableField.Equals(value) != true)) {
                    this.AvaliableField = value;
                    this.RaisePropertyChanged("Avaliable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationNumber {
            get {
                return this.RegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNumberField, value) != true)) {
                    this.RegistrationNumberField = value;
                    this.RaisePropertyChanged("RegistrationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarReantalService.ICarRentalService")]
    public interface ICarRentalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/AddCar", ReplyAction="http://tempuri.org/ICarRentalService/AddCarResponse")]
        void AddCar(App.Client.CarReantalService.CarModel Car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/AddCar", ReplyAction="http://tempuri.org/ICarRentalService/AddCarResponse")]
        System.Threading.Tasks.Task AddCarAsync(App.Client.CarReantalService.CarModel Car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/DeleteCar", ReplyAction="http://tempuri.org/ICarRentalService/DeleteCarResponse")]
        void DeleteCar(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/DeleteCar", ReplyAction="http://tempuri.org/ICarRentalService/DeleteCarResponse")]
        System.Threading.Tasks.Task DeleteCarAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/UpdateCar", ReplyAction="http://tempuri.org/ICarRentalService/UpdateCarResponse")]
        App.Client.CarReantalService.CarModel UpdateCar(App.Client.CarReantalService.CarModel Car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarRentalService/UpdateCar", ReplyAction="http://tempuri.org/ICarRentalService/UpdateCarResponse")]
        System.Threading.Tasks.Task<App.Client.CarReantalService.CarModel> UpdateCarAsync(App.Client.CarReantalService.CarModel Car);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarRentalServiceChannel : App.Client.CarReantalService.ICarRentalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarRentalServiceClient : System.ServiceModel.ClientBase<App.Client.CarReantalService.ICarRentalService>, App.Client.CarReantalService.ICarRentalService {
        
        public CarRentalServiceClient() {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarRentalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddCar(App.Client.CarReantalService.CarModel Car) {
            base.Channel.AddCar(Car);
        }
        
        public System.Threading.Tasks.Task AddCarAsync(App.Client.CarReantalService.CarModel Car) {
            return base.Channel.AddCarAsync(Car);
        }
        
        public void DeleteCar(int Id) {
            base.Channel.DeleteCar(Id);
        }
        
        public System.Threading.Tasks.Task DeleteCarAsync(int Id) {
            return base.Channel.DeleteCarAsync(Id);
        }
        
        public App.Client.CarReantalService.CarModel UpdateCar(App.Client.CarReantalService.CarModel Car) {
            return base.Channel.UpdateCar(Car);
        }
        
        public System.Threading.Tasks.Task<App.Client.CarReantalService.CarModel> UpdateCarAsync(App.Client.CarReantalService.CarModel Car) {
            return base.Channel.UpdateCarAsync(Car);
        }
    }
}
